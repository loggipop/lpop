# Environment Variables for lpop CI/CD Pipeline
# Copy this file to .env for local development (optional)
# For production CI, set these as GitHub repository secrets

# =============================================================================
# GITHUB ACTIONS SECRETS
# =============================================================================
# These should be configured as GitHub repository secrets, not in .env files

# macOS Code Signing & Notarization
# ----------------------------------
MACOS_CERTIFICATE=                    # Base64-encoded Developer ID Application certificate (.p12 file)
MACOS_CERTIFICATE_PASSWORD=           # Password for the .p12 certificate file
APPLE_ID=                             # Your Apple ID email address
APPLE_APP_PASSWORD=                   # App-specific password (generate at appleid.apple.com)
APPLE_TEAM_ID=                        # Your Apple Developer Team ID (10-character string)

# Windows Code Signing
# ---------------------
WINDOWS_CERTIFICATE=                  # Base64-encoded code signing certificate (.p12 file)
WINDOWS_CERTIFICATE_PASSWORD=         # Password for the Windows certificate

# Linux Code Signing
# -------------------
LINUX_CERTIFICATE=                    # Base64-encoded GPG private key for signing Linux binaries

# NPM Publishing
# --------------
NPM_TOKEN=                            # NPM authentication token for publishing packages

# =============================================================================
# HOW TO GENERATE CERTIFICATES
# =============================================================================

# macOS Certificates:
# 1. Create Developer ID Application certificate in Apple Developer Console
# 2. Download and install in Keychain
# 3. Export as .p12: Keychain Access → Certificate → Right-click → Export
# 4. Base64 encode: `base64 -i certificate.p12 | pbcopy`
# 5. Generate app-specific password at https://appleid.apple.com

# Windows Certificates:
# 1. Obtain code signing certificate from trusted CA (DigiCert, Sectigo, etc.)
# 2. Export as .p12 with private key
# 3. Base64 encode: `base64 -i certificate.p12 | pbcopy`

# Linux GPG Key:
# 1. Generate GPG key: `gpg --full-generate-key`
# 2. Export private key: `gpg --armor --export-secret-keys YOUR_KEY_ID`
# 3. Base64 encode the exported key

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Never commit actual certificates or keys to version control
# - Use GitHub repository secrets for all sensitive values
# - Rotate certificates before they expire
# - Use app-specific passwords, never your main Apple ID password
# - Keep certificate passwords secure and unique
